{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amandariu/development/sandbox/react-time-tracking-app/client/src/components/EditableTimer.js\";\nimport React from 'react';\nimport TimerForm from './TimerForm';\nimport Timer from './Timer';\nexport default class EditableTimer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editFormOpen: false\n    };\n\n    this.handleEditClick = () => {\n      this.openForm();\n    };\n\n    this.handleFormClose = () => {\n      this.closeForm();\n    };\n\n    this.handleSubmit = timer => {\n      this.props.onFormSubmit(timer);\n      this.closeForm();\n    };\n\n    this.closeForm = () => {\n      this.setState({\n        editFormOpen: false\n      });\n    };\n\n    this.openForm = () => {\n      this.setState({\n        editFormOpen: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      project,\n      elapsed,\n      runningSince\n    } = this.props;\n\n    if (this.state.editFormOpen) {\n      return /*#__PURE__*/_jsxDEV(TimerForm, {\n        id: id,\n        title: title,\n        project: project,\n        onFormSubmit: this.handleSubmit,\n        onFormClose: this.handleFormClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Timer, {\n        id: id,\n        title: title,\n        project: project,\n        elapsed: elapsed,\n        runningSince: runningSince,\n        onEditClick: this.handleEditClick,\n        onTrashClick: this.props.onTrashClick,\n        onStartClick: this.props.onStartClick,\n        onStopClick: this.props.onStopClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/amandariu/development/sandbox/react-time-tracking-app/client/src/components/EditableTimer.js"],"names":["React","TimerForm","Timer","EditableTimer","Component","state","editFormOpen","handleEditClick","openForm","handleFormClose","closeForm","handleSubmit","timer","props","onFormSubmit","setState","render","id","title","project","elapsed","runningSince","onTrashClick","onStartClick","onStopClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AACJC,MAAAA,YAAY,EAAE;AADV,KAD+C;;AAAA,SAKvDC,eALuD,GAKrC,MAAM;AACpB,WAAKC,QAAL;AACH,KAPsD;;AAAA,SASvDC,eATuD,GASrC,MAAM;AACpB,WAAKC,SAAL;AACH,KAXsD;;AAAA,SAavDC,YAbuD,GAatCC,KAAF,IAAa;AACxB,WAAKC,KAAL,CAAWC,YAAX,CAAyBF,KAAzB;AACA,WAAKF,SAAL;AACH,KAhBsD;;AAAA,SAkBvDA,SAlBuD,GAkB3C,MAAM;AACd,WAAKK,QAAL,CAAe;AAAET,QAAAA,YAAY,EAAE;AAAhB,OAAf;AACH,KApBsD;;AAAA,SAsBvDE,QAtBuD,GAsB5C,MAAM;AACb,WAAKO,QAAL,CAAe;AAAET,QAAAA,YAAY,EAAE;AAAhB,OAAf;AACH,KAxBsD;AAAA;;AA0BvDU,EAAAA,MAAM,GAAG;AACL,UAAM;AACFC,MAAAA,EADE;AAEFC,MAAAA,KAFE;AAGFC,MAAAA,OAHE;AAIFC,MAAAA,OAJE;AAKFC,MAAAA;AALE,QAMF,KAAKR,KANT;;AAQA,QAAK,KAAKR,KAAL,CAAWC,YAAhB,EAA+B;AAC3B,0BACI,QAAC,SAAD;AACI,QAAA,EAAE,EAAGW,EADT;AAEI,QAAA,KAAK,EAAGC,KAFZ;AAGI,QAAA,OAAO,EAAGC,OAHd;AAII,QAAA,YAAY,EAAG,KAAKR,YAJxB;AAKI,QAAA,WAAW,EAAG,KAAKF;AALvB;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVD,MAUO;AACH,0BACI,QAAC,KAAD;AACI,QAAA,EAAE,EAAGQ,EADT;AAEI,QAAA,KAAK,EAAGC,KAFZ;AAGI,QAAA,OAAO,EAAGC,OAHd;AAII,QAAA,OAAO,EAAGC,OAJd;AAKI,QAAA,YAAY,EAAGC,YALnB;AAMI,QAAA,WAAW,EAAG,KAAKd,eANvB;AAOI,QAAA,YAAY,EAAG,KAAKM,KAAL,CAAWS,YAP9B;AAQI,QAAA,YAAY,EAAG,KAAKT,KAAL,CAAWU,YAR9B;AASI,QAAA,WAAW,EAAG,KAAKV,KAAL,CAAWW;AAT7B;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH;AACJ;;AA5DsD","sourcesContent":["import React from 'react';\n\nimport TimerForm from './TimerForm';\nimport Timer from './Timer';\n\nexport default class EditableTimer extends React.Component {\n    state = {\n        editFormOpen: false,\n    };\n\n    handleEditClick = () => {\n        this.openForm();\n    };\n\n    handleFormClose = () => {\n        this.closeForm();\n    };\n\n    handleSubmit = ( timer ) => {\n        this.props.onFormSubmit( timer );\n        this.closeForm();\n    };\n\n    closeForm = () => {\n        this.setState( { editFormOpen: false } );\n    };\n\n    openForm = () => {\n        this.setState( { editFormOpen: true } );\n    };\n\n    render() {\n        const {\n            id,\n            title,\n            project,\n            elapsed,\n            runningSince\n        } = this.props;\n\n        if ( this.state.editFormOpen ) {\n            return (\n                <TimerForm\n                    id={ id }\n                    title={ title }\n                    project={ project }\n                    onFormSubmit={ this.handleSubmit }\n                    onFormClose={ this.handleFormClose }\n                />\n            );\n        } else {\n            return (\n                <Timer\n                    id={ id }\n                    title={ title }\n                    project={ project }\n                    elapsed={ elapsed }\n                    runningSince={ runningSince }\n                    onEditClick={ this.handleEditClick }\n                    onTrashClick={ this.props.onTrashClick }\n                    onStartClick={ this.props.onStartClick }\n                    onStopClick={ this.props.onStopClick }\n                />\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}